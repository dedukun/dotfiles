# The Simple X Hotkey Daemon is the program used by LARBS to map most of the
# dwm-independent commands.  This file is pretty readable, so I'll let you read
# it.

# The keys NOT bound here by sxhkd, but by dwm or i3 are:
# The t thru p keys on the top row
# The f thru ; keys on the home row
# The b key on the bottom row (hides the bar in either case)

# start a terminal
super + Return
        eval "$TERMINAL_OPEN" "$HOME"

# start a terminal in the focused window's working directory
super + shift + Return
        eval "$TERMINAL_OPEN" "$(xcwd)"

# start a terminal in the current GBT project directory
super + control + Return
        eval "$TERMINAL_OPEN" "$($SCRIPTS/project/manage.sh gbt --get)"

# start a terminal in the current Personal project directory
super + shift + control + Return
        eval "$TERMINAL_OPEN" "$($SCRIPTS/project/manage.sh per --get)"

# start terminal in temp dir
super + m
        eval "$TERMINAL_OPEN" "$($SCRIPTS/tempdir.sh --select)"

# start program launcher
super + d
        rofi -show run -matching fuzzy

# start desktop program launcher
super + shift + d
        rofi -show drun -matching fuzzy

# lock Screen
super + control + l
        slock && bspc wm -O eDP1 HDMI2

# lock mouse and keyboard
super + shift + control + l
        xtrlock && bspc wm -O eDP1 HDMI2

# open firefox
super + shift + w
        firefox --private-window

# open chromium
super + control + w
        chromium --incognito

# open rofi as ssh launcher (no ~/.ssh/ssh_host)
super + s
        rofi -show ssh -no-parse-known-hosts -matching fuzzy -terminal $TERMINAL

# open rofi as ssh launcher
super + shift + s
        rofi -show ssh -matching fuzzy -terminal $TERMINAL

##
## WINDOWS COMMANDS
##

# kill focused window
super + {shift + ,shift + control + }q
	bspc node -{c,k}

# toggle fullscreen
super + {_, shift +} f
        {bspc desktop -l next, $SCRIPTS/bspwm/fullscreen.sh}

# rotate current node 90 degrees
super + r
	bspc node @focused:/ -R 90

# rotate current node 270 degrees
super + shift + r
	bspc node @focused:/ -R 270

# swap the current node and the biggest local node
super + space
	bspc node -s biggest.local || bspc node -s next.local

# toggle tiling / floating
super + shift + space
	bspc node focused -t \~floating

# focus or send the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# resize window
super + {y,u,i,o}
        $SCRIPTS/bspwm/resize.sh {west, north, south, east} 1

super + shift + {y,u,i,o}
        $SCRIPTS/bspwm/resize.sh {west, north, south, east} 5

# focus the given desktop remenbering last focus (similar to i3 back-and-forth)
super + {1-9,0}
        desktop='^{1-9,10}'; \
        [ $(bspc query -D -d "$desktop") = $(bspc query -D -d "newest") ] && bspc desktop -f last || bspc desktop -f "$desktop"

# focus or send to the given desktop
super + shift + {1-9,0}
	bspc node -d ^{1-9,10}

# last desktop
super + {Tab}
	bspc desktop last --focus

# scratch pad
super + {_,shift +} backslash
        $SCRIPTS/bspwm/scratchpad.sh {cycle,send}

# toggle following the focused window
super + w
        bspc node focused --flag sticky

##
## FUNCTION KEYS
##

# Run networkmanager in dmenu
# super + F2
#         networkmanager_dmenu

# keyboard backlight
# super + F3
#         light -s "sysfs/leds/asus::kbd_backlight" -U 50
#
# super + F4
#         light -s "sysfs/leds/asus::kbd_backlight" -A 50

# screen backlight
XF86MonBrightnessDown
        light -U 5
XF86MonBrightnessUp
        light -A 5
control + XF86MonBrightnessDown
        light -U 10
control + XF86MonBrightnessUp
        light -A 10
shift XF86MonBrightnessDown
        light -U 1
shift + XF86MonBrightnessUp
        light -A 1

# # Toggle touchpad
# super + F9
#         $SCRIPTS/nomouse.sh
#
# # Toggle touchpad with no delay
# super + control + F9
#         $SCRIPTS/nomouse.sh --no-delay

# Toggle microphone
shift + XF86AudioMute
        $SCRIPTS/polybar/pulseaudio-microphone.sh --toggle

# Volume controls
XF86AudioMute
        pamixer --toggle-mute
XF86AudioLowerVolume
        pamixer --decrease 5
XF86AudioRaiseVolume
        pamixer --increase 5
control + XF86AudioLowerVolume
        pamixer --decrease 10
control + XF86AudioRaiseVolume
        pamixer --increase 10
shift + XF86AudioLowerVolume
        pamixer --decrease 1
shift + XF86AudioRaiseVolume
        pamixer --increase 1

# Media controls
# playerctl is pending with firefox, but still works
XF86AudioStop
        timeout 1s playerctl stop
XF86AudioNext
        timeout 1s playerctl next
XF86AudioPrev
        timeout 1s playerctl previous
XF86AudioPlay
        timeout 1s playerctl play-pause

# screen shots
super + Print
        $SCRIPTS/screenshots.sh -df -m

# screen shots GBT current project
super + control + Print
        $SCRIPTS/screenshots.sh -f $($SCRIPTS/project/manage.sh gbt --get)/Pictures/screenshots -m

# screen shots Personal current project
super + control + shift + Print
        $SCRIPTS/screenshots.sh -f $($SCRIPTS/project/manage.sh per --get)/Pictures/screenshots -m

##
## OTHERS
##

# Curret GBT project TODO list
super + t
        $SCRIPTS/todo.sh -l $($SCRIPTS/project/manage.sh gbt --get)/.todo

# Global TODO list
super + shift + t
        $SCRIPTS/todo.sh

# GBT Manage
super + g
        $SCRIPTS/project/manage.sh gbt

# GBT Show current project
super + shift + g
        $SCRIPTS/project/manage.sh gbt --show

# Personal Projects
super + p
        $SCRIPTS/project/manage.sh per

# Show current personal project
super + shift + p
        $SCRIPTS/project/manage.sh per --show

# Toggle Mouse Remaps
super + b
        $SCRIPTS/mousebuttons.sh --toggle

# Mouse Remaps Show
super + shift + b
        $SCRIPTS/mousebuttons.sh --show

# Mouse Remaps Mode
super + control + b
        $SCRIPTS/mousebuttons.sh --mode

# color picker TODO change to xsel
super + c
        colorpicker --one-shot --short --preview | xsel --clipboard

# open notification center
super + n
        kill -s USR1 $(pidof deadd-notification-center)

# grave
        # slock && bspc wm -O eDP1 HDMI2

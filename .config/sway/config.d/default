# vi:ft=swayconfig
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulators
set $term kitty
set $term_open kitty --directory

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show

### Idle configuration
exec swayidle -w\
    timeout 1100 'systemctl suspend-then-hibernate' \
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    timeout 770 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


focus_follows_mouse no
workspace_auto_back_and_forth yes

# Force workspaces to specific monitors
workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output HDMI-A-1
workspace 5 output HDMI-A-1
workspace 6 output HDMI-A-1
workspace 7 output DP-1
workspace 8 output DP-1
workspace 9 output DP-1
workspace 10 output DP-1

### Key bindings
#
# Basics:
#
    # Start a floating terminal
    bindsym $mod+Return exec $term

    # start a terminal in the focused window's working directory
    bindsym $mod+Shift+Return exec $term_open "$(~/.config/sway/scripts/swaycwd)"

    # start a terminal in the current GBT project directory
    bindsym $mod+Control+Return exec $term_open "$($SCRIPTS/project/manage.sh gbt --get)"

    # start a terminal in the current Personal project directory
    bindsym $mod+Shift+Control+Return exec $term_open "$($SCRIPTS/project/manage.sh per --get)"

    # start terminal in temp dir
    bindsym $mod+m exec $term_open "$($SCRIPTS/tempdir.sh --select)"

    # start program launcher
    bindsym $mod+d exec $menu run

    # start desktop program launcher
    bindsym $mod+Shift+d exec $menu drun

    # Start firefox
    bindsym $mod+Shift+w exec firefox --private-window

    # Start chromium
    bindsym $mod+Control+w exec chromium --incognito

    # Lock computer
    bindsym $mod+Control+l exec ~/.config/sway/scripts/lockman.sh

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # change split direction
    bindsym $mod+v split toggle

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus maximiazed
    bindsym $mod+f exec ~/.config/sway/scripts/sway-maximize.sh -d 2 -m 2

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Sticky / follow
    bindsym $mod+Shift+s sticky toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+slash move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+slash scratchpad show
#
# Resizing containers:
#
    mode "resize" {
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        bindsym Control+$left resize shrink width 100px
        bindsym Control+$down resize grow height 100px
        bindsym Control+$up resize shrink height 100px
        bindsym Control+$right resize grow width 100px

        bindsym Shift+$left resize shrink width 1px
        bindsym Shift+$down resize grow height 1px
        bindsym Shift+$up resize shrink height 1px
        bindsym Shift+$right resize grow width 1px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Space mode "default"
    }
    bindsym $mod+r mode "resize"

    # Resize floating windows with mouse scroll:
    bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
    bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button4 resize shrink width 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button5 resize grow width 5 px or 5 ppt

    # Screen backlight
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set +5%
    bindsym Control+XF86MonBrightnessDown exec brightnessctl set 10%-
    bindsym Control+XF86MonBrightnessUp exec brightnessctl set +10%
    bindsym Shift+XF86MonBrightnessDown exec brightnessctl set 1%-
    bindsym Shift+XF86MonBrightnessUp exec brightnessctl set +1%

    # Toggle microphone
    bindsym Shift+XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

    # Volume controls
    bindsym XF86AudioMute exec  wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
    bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
    bindsym Control+XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
    bindsym Control+XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+
    bindsym Shift+XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
    bindsym Shift+XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+

    # Media controls
    # playerctl is pending with firefox, but still works
    bindsym XF86AudioStop exec timeout 1s playerctl stop
    bindsym XF86AudioNext exec timeout 1s playerctl next
    bindsym XF86AudioPrev exec timeout 1s playerctl previous
    bindsym XF86AudioPlay exec timeout 1s playerctl play-pause

    # screen shots
    bindsym Print exec $SCRIPTS/screenshots.sh -df -m

    # screen shots GBT current project
    bindsym Control+Print exec $SCRIPTS/screenshots.sh -f $($SCRIPTS/project/manage.sh gbt --get)/Pictures/screenshots -m

    # screen shots Personal current project
    bindsym Control+Shift+Print exec $SCRIPTS/screenshots.sh -f $($SCRIPTS/project/manage.sh per --get)/Pictures/screenshots -m

    ##
    ## OTHERS
    ##

    # Curret GBT project TODO list
    bindsym $mod+t exec $SCRIPTS/todo.sh -l $($SCRIPTS/project/manage.sh gbt --get)/.todo

    # Global TODO list
    bindsym $mod+Shift+t exec $SCRIPTS/todo.sh

    # GBT Manage
    bindsym $mod+g exec $SCRIPTS/project/manage.sh gbt

    # GBT Show current project
    bindsym $mod+Shift+g exec $SCRIPTS/project/manage.sh gbt --show

    # Personal Projects
    bindsym $mod+p exec $SCRIPTS/project/manage.sh per

    # Show current personal project
    bindsym $mod+Shift+p exec $SCRIPTS/project/manage.sh per --show

    # Toggle Mouse Remaps
    bindsym $mod+b exec $SCRIPTS/mousebuttons.sh --toggle

    # Mouse Remaps Show
    bindsym $mod+Shift+b exec $SCRIPTS/mousebuttons.sh --show

    # Mouse Remaps Mode
    bindsym $mod+Control+b exec $SCRIPTS/mousebuttons.sh --mode
